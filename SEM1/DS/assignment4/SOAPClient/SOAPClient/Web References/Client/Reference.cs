//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SOAPClient.Client {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ClientServiceSoap", Namespace="Assignment4")]
    public partial class ClientService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListPackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchPackagesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ClientService() {
            this.Url = global::SOAPClient.Properties.Settings.Default.SOAPClient_Client_ClientService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListPackagesCompletedEventHandler ListPackagesCompleted;
        
        /// <remarks/>
        public event SearchPackagesCompletedEventHandler SearchPackagesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Assignment4/ListPackages", RequestNamespace="Assignment4", ResponseNamespace="Assignment4", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PackageDTO[] ListPackages(string username) {
            object[] results = this.Invoke("ListPackages", new object[] {
                        username});
            return ((PackageDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void ListPackagesAsync(string username) {
            this.ListPackagesAsync(username, null);
        }
        
        /// <remarks/>
        public void ListPackagesAsync(string username, object userState) {
            if ((this.ListPackagesOperationCompleted == null)) {
                this.ListPackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListPackagesOperationCompleted);
            }
            this.InvokeAsync("ListPackages", new object[] {
                        username}, this.ListPackagesOperationCompleted, userState);
        }
        
        private void OnListPackagesOperationCompleted(object arg) {
            if ((this.ListPackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListPackagesCompleted(this, new ListPackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Assignment4/SearchPackages", RequestNamespace="Assignment4", ResponseNamespace="Assignment4", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PackageDTO[] SearchPackages(string username, string searchText) {
            object[] results = this.Invoke("SearchPackages", new object[] {
                        username,
                        searchText});
            return ((PackageDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchPackagesAsync(string username, string searchText) {
            this.SearchPackagesAsync(username, searchText, null);
        }
        
        /// <remarks/>
        public void SearchPackagesAsync(string username, string searchText, object userState) {
            if ((this.SearchPackagesOperationCompleted == null)) {
                this.SearchPackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchPackagesOperationCompleted);
            }
            this.InvokeAsync("SearchPackages", new object[] {
                        username,
                        searchText}, this.SearchPackagesOperationCompleted, userState);
        }
        
        private void OnSearchPackagesOperationCompleted(object arg) {
            if ((this.SearchPackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchPackagesCompleted(this, new SearchPackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Assignment4")]
    public partial class PackageDTO {
        
        private string senderField;
        
        private string receiverField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string senderCityField;
        
        private string destinationCityField;
        
        private string isTrackedField;
        
        private string trackingField;
        
        /// <remarks/>
        public string Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public string Receiver {
            get {
                return this.receiverField;
            }
            set {
                this.receiverField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string SenderCity {
            get {
                return this.senderCityField;
            }
            set {
                this.senderCityField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationCity {
            get {
                return this.destinationCityField;
            }
            set {
                this.destinationCityField = value;
            }
        }
        
        /// <remarks/>
        public string isTracked {
            get {
                return this.isTrackedField;
            }
            set {
                this.isTrackedField = value;
            }
        }
        
        /// <remarks/>
        public string Tracking {
            get {
                return this.trackingField;
            }
            set {
                this.trackingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListPackagesCompletedEventHandler(object sender, ListPackagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListPackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListPackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PackageDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PackageDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SearchPackagesCompletedEventHandler(object sender, SearchPackagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchPackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PackageDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PackageDTO[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591